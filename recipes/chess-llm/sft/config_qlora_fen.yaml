# Model arguments
# model_name_or_path: mistralai/Mistral-7B-v0.1
model_name_or_path: /data/models/Mistral-7B-Instruct-v0.1/
model_revision: main
torch_dtype: bfloat16
use_flash_attention_2: true

# LoRA arguments
load_in_4bit: true
use_peft: true
lora_r: 8
lora_alpha: 32
lora_dropout: 0.05
lora_target_modules:
- q_proj
- k_proj
- v_proj
- o_proj
- gate_proj
- up_proj
- down_proj

# Data training arguments
# chat_template: "{% for message in messages %}\n{% if message['role'] == 'user' %}\n{{ '<|user|>\n' + message['content'] + eos_token }}\n{% elif message['role'] == 'system' %}\n{{ '<|system|>\n' + message['content'] + eos_token }}\n{% elif message['role'] == 'assistant' %}\n{{ '<|assistant|>\n'  + message['content'] + eos_token }}\n{% endif %}\n{% if loop.last and add_generation_prompt %}\n{{ '<|assistant|>' }}\n{% endif %}\n{% endfor %}"
# chat_template: "{% for message in messages %}\n{% if message['role'] == 'system' %}\n{{ message['content'] + eos_token }}\n{% elif message['role'] == 'user' %}\n{{ '<|white|> ' + message['content'] + ' <|board|> ' + message['fen'] }}\n{% elif message['role'] == 'assistant' %}\n{{ '<|black|> ' + message['content'] + ' <|board|> ' + message['fen'] }}\n{% endif %}\n{% if loop.last and add_generation_prompt %}\n{{ '<|' + add_generation_prompt + '|>' }}\n{% endif %}\n{% endfor %}"
# chat_template: "{% for message in messages %}{% if message['role'] == 'system' %}{{ message['content'] + eos_token }}{% elif message['role'] == 'user' %}{{ '<|white|> ' + message['content'] }}{% elif message['role'] == 'assistant' %}{{ '<|black|> ' + message['content'] }}{% endif %}{% if loop.last and add_generation_prompt %}{{ '<|' + add_generation_prompt + '|>' }}{% endif %}{% endfor %}"
# chat_template: "{% for message in messages %}{% if message['role'] == 'system' %}{{ message['content'] + eos_token }}{% elif message['role'] == 'user' %}{{ ' [white] ' + message['content'] }}{% elif message['role'] == 'assistant' %}{{ ' [black] ' + message['content'] }}{% endif %}{% if loop.last and add_generation_prompt %}{{ ' [' + add_generation_prompt + '] ' }}{% endif %}{% endfor %}"
chat_template: "{% for message in messages %}{% if message['role'] == 'system' %}{{ message['content'] + eos_token }}{% elif message['role'] == 'user' %}{{ ' [white] ' + message['content'] + ' [board] ' + message['fen'] }}{% elif message['role'] == 'assistant' %}{{ ' [black] ' + message['content'] + ' [board] ' + message['fen'] }}{% endif %}{% if loop.last and add_generation_prompt %}{{ ' [' + add_generation_prompt + '] ' }}{% endif %}{% endfor %}"
dataset_mixer:
  # /home/ubuntu/llm-peft-chess/prompts: 1.0
  /home/mdhamank/testing/final/llm-peft-chess/prompts: 1.0
dataset_splits:
- train
- test
preprocessing_num_workers: 12

# SFT trainer config
bf16: false
do_eval: true
evaluation_strategy: epoch
gradient_accumulation_steps: 2
gradient_checkpointing: true
gradient_checkpointing_kwargs:
  use_reentrant: false
hub_model_id: chess-llm
hub_strategy: every_save
learning_rate: 2.0e-04
log_level: info
logging_steps: 5  
logging_strategy: steps
lr_scheduler_type: cosine
max_seq_length: 4096
max_steps: -1
num_train_epochs: 2
output_dir: data/chess-llm-fen
overwrite_output_dir: true
per_device_eval_batch_size: 2
per_device_train_batch_size: 2
push_to_hub: false
report_to:
- wandb
save_strategy: "steps"
save_steps: 100
save_total_limit: 1
seed: 42
warmup_ratio: 0.1
